# Generated by Django 3.1.4 on 2021-01-05 15:56

import api.models
import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_count', models.PositiveIntegerField(validators=[api.models.image_count_validator])),
                ('expire', models.DateTimeField(validators=[api.models.expire_validator])),
                ('voting', models.DateTimeField()),
                ('status', models.SmallIntegerField(choices=[(1, 'STARTED'), (2, 'VOTING'), (3, 'FINISHED')], default=1)),
                ('theme', models.CharField(max_length=50)),
                ('reward', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highest_rate', models.PositiveIntegerField(default=0)),
                ('won', models.PositiveIntegerField(default=0)),
                ('lost', models.PositiveIntegerField(default=0)),
                ('tied', models.PositiveIntegerField(default=0)),
                ('resigned', models.PositiveIntegerField(default=0)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileToChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voted', models.BooleanField(default=False)),
                ('c', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ctp', to='api.challenge')),
                ('p', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ptc', to='api.profile')),
            ],
            options={
                'unique_together': {('c', 'p')},
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='challenges',
            field=models.ManyToManyField(blank=True, through='api.ProfileToChallenge', to='api.Challenge'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('likes', models.SmallIntegerField(default=0)),
                ('ptc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profiletochallenge')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.photo')),
                ('ptc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profiletochallenge')),
            ],
        ),
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(1, 'WAITING'), (2, 'ACCEPTED'), (3, 'REJECTED')], default=1)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendship_requests_sent', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendship_requests_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Friend',
                'unique_together': {('to_user', 'from_user')},
            },
        ),
    ]
